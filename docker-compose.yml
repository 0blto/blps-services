version: "3.8"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - drain-network
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - drain-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://:9092
    restart: always

  blps-fundament:
    build:
      context: ./blps
    depends_on:
      - postgres-auth
      - postgres-shopping
      - zookeeper
      - kafka
    container_name: blps-fundament
    expose:
      - "5100"
    ports:
      - "5100:5100/tcp"
    networks:
      - drain-network
    restart: always

  blps-mail:
    build:
      context: ./mail-service
    depends_on:
      - postgres-auth
      - postgres-shopping
      - zookeeper
      - kafka
    container_name: blps-mail
    expose:
      - "5200"
    ports:
      - "5200:5200/tcp"
    networks:
      - drain-network
    restart: always

  postgres-auth:
    container_name: postgres-container-blps-auth
    image: postgres:latest
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "max_prepared_transactions=100"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    expose:
      - "5432"
    ports:
      - "5557:5432/tcp"
    networks:
      - drain-network
    restart: always

  postgres-shopping:
    container_name: postgres-container-blps-shopping
    image: postgres:latest
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "max_prepared_transactions=100"
    environment:
      POSTGRES_DB: postgres2
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    expose:
      - "5432"
    ports:
      - "5556:5432/tcp"
    networks:
      - drain-network
    restart: always

networks:
  drain-network:
    driver: bridge