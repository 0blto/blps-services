version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - drain-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "mailer:5:1"
    networks:
      - drain-network

  blps-fundament:
    build:
      context: ./blps
    depends_on:
      - blps-mail
    container_name: blps-fundament
    expose:
      - "5100"
    ports:
      - "5100:5100/tcp"
    networks:
      - drain-network
    restart: always

  blps-fundament-replica:
    build:
      context: ./blps
    depends_on:
      - blps-mail
    container_name: blps-fundament-replica
    expose:
      - "5100"
    ports:
      - "5115:5100/tcp"
    networks:
      - drain-network
    restart: always

  blps-mail:
    build:
      context: ./mail-service
    depends_on:
      - postgres-auth
      - postgres-shopping
      - kafka
    container_name: blps-mail
    expose:
      - "5200"
    ports:
      - "5201:5200/tcp"
    networks:
      - drain-network
    restart: always

  postgres-auth:
    container_name: postgres-container-blps-auth
    image: postgres:latest
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "max_prepared_transactions=100"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    expose:
      - "5432"
    ports:
      - "5557:5432/tcp"
    networks:
      - drain-network
    restart: always

  postgres-shopping:
    container_name: postgres-container-blps-shopping
    image: postgres:latest
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "max_prepared_transactions=100"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    expose:
      - "5432"
    ports:
      - "5556:5432/tcp"
    networks:
      - drain-network
    restart: always

  postgres-shed:
    container_name: postgres-container-blps-shed
    image: postgres:latest
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "max_prepared_transactions=100"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    expose:
      - "5432"
    ports:
      - "5558:5432/tcp"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - drain-network
    restart: always

networks:
  drain-network:
    driver: bridge